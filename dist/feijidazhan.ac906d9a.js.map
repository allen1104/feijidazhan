{"mappings":"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","sources":["<anon>","src/main.js","src/scenes/GameScene.js","src/utils/ObjectPool.js","src/config/enemyConfig.js"],"sourcesContent":["class $1a431237764dd29c$var$ObjectPool {\n    constructor(scene, key, maxSize = 30){\n        this.scene = scene;\n        this.key = key;\n        this.maxSize = maxSize;\n        this.group = scene.physics.add.group({\n            defaultKey: key,\n            maxSize: maxSize\n        });\n    }\n    spawn(x, y) {\n        let obj = this.group.get(x, y);\n        if (obj) {\n            obj.setActive(true).setVisible(true);\n            obj.body.enable = true;\n            obj.x = x;\n            obj.y = y;\n            return obj;\n        }\n        return null;\n    }\n}\nvar $1a431237764dd29c$export$2e2bcd8739ae039 = $1a431237764dd29c$var$ObjectPool;\n\n\n// 敌机类型配置\nvar $f504a794c1ed85ad$export$2e2bcd8739ae039 = {\n    normal: {\n        key: 'enemy',\n        hp: 1,\n        score: 10,\n        speed: ()=>Phaser.Math.Between(120, 200),\n        destroyAnim: 'enemy_destroy',\n        spawnY: -40,\n        spawnX: ()=>Phaser.Math.Between(40, 400)\n    },\n    boss1: {\n        key: 'enemy2',\n        hp: 100,\n        score: 100,\n        speed: ()=>100,\n        destroyAnim: 'boss1_destroy',\n        spawnY: -60,\n        spawnX: ()=>Phaser.Math.Between(60, 400)\n    },\n    boss2: {\n        key: 'enemy3',\n        hp: 200,\n        score: 500,\n        speed: ()=>80,\n        destroyAnim: 'boss2_destroy',\n        spawnY: -80,\n        spawnX: ()=>Phaser.Math.Between(80, 400)\n    }\n};\n\n\n// 常量统一管理\nconst $f54ab983046695b8$var$PLAYER_SPEED = 300;\nconst $f54ab983046695b8$var$PLAYER_REVIVE_Y = 120;\nconst $f54ab983046695b8$var$PLAYER_INVINCIBLE_TIME = 3000;\nconst $f54ab983046695b8$var$ENEMY_HP = 1;\nconst $f54ab983046695b8$var$BULLET_SPEED = -600;\nconst $f54ab983046695b8$var$ENEMY_SPAWN_DELAY = 800;\nconst $f54ab983046695b8$var$BULLET_SPAWN_DELAY = 200;\nconst $f54ab983046695b8$var$LIVES_ICON_GAP = 40;\nconst $f54ab983046695b8$var$LIVES_ICON_Y = 80;\nconst $f54ab983046695b8$var$SCORE_TEXT_X = 16;\nconst $f54ab983046695b8$var$SCORE_TEXT_Y = 16;\nclass $f54ab983046695b8$var$GameScene extends Phaser.Scene {\n    constructor(){\n        super({\n            key: 'GameScene'\n        });\n        this.player = null;\n        this.bullets = null;\n        this.enemies = null;\n        this.lastEnemyTime = 0;\n        this.pool = null;\n        this.score = 0;\n        this.scoreText = null;\n        this.isGameOver = false;\n        this.lives = 3;\n        this.livesIcons = [];\n        this.isInvincible = false;\n        this.invincibleTimer = null;\n    }\n    preload() {\n        // 批量加载资源\n        const images = [\n            [\n                'player',\n                'me1.png'\n            ],\n            [\n                'bullet',\n                'bullet1.png'\n            ],\n            [\n                'enemy',\n                'enemy1.png'\n            ],\n            [\n                'bg',\n                'background.png'\n            ],\n            [\n                'life',\n                'life.png'\n            ],\n            [\n                'me_destroy_1',\n                'me_destroy_1.png'\n            ],\n            [\n                'me_destroy_2',\n                'me_destroy_2.png'\n            ],\n            [\n                'me_destroy_3',\n                'me_destroy_3.png'\n            ],\n            [\n                'me_destroy_4',\n                'me_destroy_4.png'\n            ],\n            [\n                'me1',\n                'me1.png'\n            ],\n            [\n                'me2',\n                'me2.png'\n            ],\n            [\n                'enemy1_down1',\n                'enemy1_down1.png'\n            ],\n            [\n                'enemy1_down2',\n                'enemy1_down2.png'\n            ],\n            [\n                'enemy1_down3',\n                'enemy1_down3.png'\n            ],\n            [\n                'enemy1_down4',\n                'enemy1_down4.png'\n            ],\n            [\n                'enemy2',\n                'enemy2.png'\n            ],\n            [\n                'enemy2_down1',\n                'enemy2_down1.png'\n            ],\n            [\n                'enemy2_down2',\n                'enemy2_down2.png'\n            ],\n            [\n                'enemy2_down3',\n                'enemy2_down3.png'\n            ],\n            [\n                'enemy2_down4',\n                'enemy2_down4.png'\n            ],\n            [\n                'enemy3',\n                'enemy3_n1.png'\n            ],\n            [\n                'enemy3_down1',\n                'enemy3_down1.png'\n            ],\n            [\n                'enemy3_down2',\n                'enemy3_down2.png'\n            ],\n            [\n                'enemy3_down3',\n                'enemy3_down3.png'\n            ],\n            [\n                'enemy3_down4',\n                'enemy3_down4.png'\n            ],\n            [\n                'enemy3_down5',\n                'enemy3_down5.png'\n            ],\n            [\n                'enemy3_down6',\n                'enemy3_down6.png'\n            ]\n        ];\n        images.forEach(([key, file])=>{\n            this.load.image(key, `./assets/images/${file}`);\n        });\n    }\n    create() {\n        this.add.tileSprite(0, 0, this.scale.width, this.scale.height, 'bg').setOrigin(0);\n        this.createAnimations();\n        this.createPlayer();\n        this.createUI();\n        this.createPools();\n        this.createEnemies();\n        this.registerEvents();\n        this.isGameOver = false;\n        this.difficultyLevel = 1;\n        // 炫酷横条预警提示\n        this.bossWarningBar = this.add.rectangle(this.scale.width / 2, 60, this.scale.width * 0.8, 48, 0xff0000, 0.7).setOrigin(0.5).setDepth(10).setVisible(false);\n        this.bossWarningBar.setStrokeStyle(4, 0xffff00, 1);\n        this.bossWarningBar.setAlpha(0.7);\n        this.bossWarningText = this.add.text(this.scale.width / 2, 60, '', {\n            fontSize: '32px',\n            fill: 'linear-gradient(90deg, #fff, #ff0, #f00)',\n            fontWeight: 'bold',\n            stroke: '#000',\n            strokeThickness: 4,\n            shadow: {\n                offsetX: 2,\n                offsetY: 2,\n                color: '#ff0',\n                blur: 8,\n                fill: true\n            }\n        }).setOrigin(0.5).setDepth(11).setVisible(false);\n    }\n    createAnimations() {\n        this.anims.create({\n            key: 'player_fly',\n            frames: [\n                {\n                    key: 'me1'\n                },\n                {\n                    key: 'me2'\n                }\n            ],\n            frameRate: 8,\n            repeat: -1\n        });\n        this.anims.create({\n            key: 'player_destroy',\n            frames: [\n                {\n                    key: 'me_destroy_1'\n                },\n                {\n                    key: 'me_destroy_2'\n                },\n                {\n                    key: 'me_destroy_3'\n                },\n                {\n                    key: 'me_destroy_4'\n                }\n            ],\n            frameRate: 10,\n            repeat: 0\n        });\n        this.anims.create({\n            key: 'enemy_destroy',\n            frames: [\n                {\n                    key: 'enemy1_down1'\n                },\n                {\n                    key: 'enemy1_down2'\n                },\n                {\n                    key: 'enemy1_down3'\n                },\n                {\n                    key: 'enemy1_down4'\n                }\n            ],\n            frameRate: 10,\n            repeat: 0\n        });\n        this.anims.create({\n            key: 'boss1_destroy',\n            frames: [\n                {\n                    key: 'enemy2_down1'\n                },\n                {\n                    key: 'enemy2_down2'\n                },\n                {\n                    key: 'enemy2_down3'\n                },\n                {\n                    key: 'enemy2_down4'\n                }\n            ],\n            frameRate: 10,\n            repeat: 0\n        });\n        this.anims.create({\n            key: 'boss2_destroy',\n            frames: [\n                {\n                    key: 'enemy3_down1'\n                },\n                {\n                    key: 'enemy3_down2'\n                },\n                {\n                    key: 'enemy3_down3'\n                },\n                {\n                    key: 'enemy3_down4'\n                },\n                {\n                    key: 'enemy3_down5'\n                },\n                {\n                    key: 'enemy3_down6'\n                }\n            ],\n            frameRate: 10,\n            repeat: 0\n        });\n    }\n    createPlayer() {\n        this.player = this.physics.add.sprite(this.scale.width / 2, this.scale.height - $f54ab983046695b8$var$PLAYER_REVIVE_Y, 'me1').setDepth(1);\n        this.player.setCollideWorldBounds(true);\n        this.player.setScale(0.5);\n        this.player.play('player_fly');\n    }\n    createUI() {\n        this.score = 0;\n        this.scoreText = this.add.text($f54ab983046695b8$var$SCORE_TEXT_X, $f54ab983046695b8$var$SCORE_TEXT_Y, \"\\u5206\\u6570: 0\", {\n            fontSize: '24px',\n            fill: '#fff'\n        }).setDepth(2);\n        this.lives = 3;\n        this.livesIcons = [];\n        for(let i = 0; i < this.lives; i++){\n            const icon = this.add.image(24 + i * $f54ab983046695b8$var$LIVES_ICON_GAP, $f54ab983046695b8$var$LIVES_ICON_Y, 'life').setScale(0.5).setDepth(2);\n            this.livesIcons.push(icon);\n        }\n    }\n    createPools() {\n        this.pool = new (0, $1a431237764dd29c$export$2e2bcd8739ae039)(this, 'bullet', 50);\n        // 敌方子弹池\n        this.enemyBullets = this.physics.add.group();\n    }\n    createEnemies() {\n        this.enemies = this.physics.add.group();\n        this.enemyEvent = this.time.addEvent({\n            delay: $f54ab983046695b8$var$ENEMY_SPAWN_DELAY,\n            loop: true,\n            callback: ()=>{\n                const x = Phaser.Math.Between(40, this.scale.width - 40);\n                const enemy = this.enemies.create(x, -40, 'enemy');\n                enemy.hp = $f54ab983046695b8$var$ENEMY_HP;\n                enemy.type = 'normal';\n                // 随机选择轨迹类型\n                const pathType = Phaser.Math.Between(1, 3);\n                enemy.pathType = pathType;\n                enemy.baseX = x;\n                enemy.spawnTime = this.time.now;\n                // 轨迹1：直线\n                if (pathType === 1) enemy.setVelocityY(Phaser.Math.Between(120, 200));\n                else if (pathType === 2) enemy.setVelocityY(150);\n                else if (pathType === 3) {\n                    enemy.setVelocityY(160);\n                    enemy.setVelocityX(Phaser.Math.Between(-80, 80));\n                }\n            }\n        });\n        // 定时出现小boss\n        this.scheduleBoss1();\n        // 定时出现大boss\n        this.scheduleBoss2();\n    }\n    scheduleBoss1() {\n        const base = 8000; // 小boss基础间隔8秒\n        const rand = Phaser.Math.Between(0, 4000); // 随机0~4秒\n        this.time.addEvent({\n            delay: base + rand,\n            callback: ()=>{\n                this.spawnBoss1();\n                this.scheduleBoss1(); // 递归定时\n            }\n        });\n    }\n    scheduleBoss2() {\n        const base = 20000; // 大boss基础间隔20秒\n        const rand = Phaser.Math.Between(0, 8000); // 随机0~8秒\n        this.time.addEvent({\n            delay: base + rand,\n            callback: ()=>{\n                this.spawnBoss2();\n                this.scheduleBoss2(); // 递归定时\n            }\n        });\n    }\n    showBossWarning(type) {\n        this.bossWarningBar.setVisible(true);\n        this.bossWarningText.setText(type === 'boss2' ? \"\\u26A1\\u26A1\\u26A1 \\u5927Boss\\u6765\\u88AD\\uFF01 \\u26A1\\u26A1\\u26A1\" : \"\\u5C0FBoss\\u6765\\u88AD\\uFF01\");\n        this.bossWarningText.setVisible(true);\n        // 闪烁动画\n        this.tweens.add({\n            targets: [\n                this.bossWarningBar,\n                this.bossWarningText\n            ],\n            alpha: {\n                from: 0.7,\n                to: 1\n            },\n            duration: 300,\n            yoyo: true,\n            repeat: 8\n        });\n        this.time.delayedCall(3000, ()=>{\n            this.bossWarningBar.setVisible(false);\n            this.bossWarningText.setVisible(false);\n        });\n    }\n    spawnBoss1() {\n        const x = Phaser.Math.Between(60, this.scale.width - 60);\n        const boss = this.enemies.create(x, -60, 'enemy2');\n        boss.setVelocityY(100);\n        boss.hp = 20;\n        boss.type = 'boss1';\n        const pathType = Phaser.Math.Between(1, 3);\n        boss.pathType = pathType;\n        boss.baseX = x;\n        boss.spawnTime = this.time.now;\n        if (pathType === 3) boss.setVelocityX(Phaser.Math.Between(-80, 80));\n        // 定时发射子弹\n        boss.shootTimer = this.time.addEvent({\n            delay: 1200,\n            loop: true,\n            callback: ()=>{\n                if (!boss.active) return;\n                this.shootEnemyBullets(boss, 3);\n            }\n        });\n    }\n    spawnBoss2() {\n        this.showBossWarning('boss2');\n        const x = Phaser.Math.Between(80, this.scale.width - 80);\n        const boss = this.enemies.create(x, -80, 'enemy3');\n        boss.setVelocityY(80);\n        boss.hp = 50;\n        boss.type = 'boss2';\n        // 定时发射子弹\n        boss.shootTimer = this.time.addEvent({\n            delay: 900,\n            loop: true,\n            callback: ()=>{\n                if (!boss.active) return;\n                this.shootEnemyBullets(boss, 7);\n            }\n        });\n    }\n    shootEnemyBullets(boss, count) {\n        const spreadAngle = 60; // 总散射角度\n        const startAngle = -spreadAngle / 2;\n        for(let i = 0; i < count; i++){\n            const angle = startAngle + spreadAngle / (count - 1) * i;\n            const rad = Phaser.Math.DegToRad(angle);\n            const speed = 300;\n            const vx = Math.sin(rad) * speed;\n            const vy = Math.cos(rad) * speed;\n            const bullet = this.enemyBullets.create(boss.x, boss.y + 40, 'bullet');\n            bullet.setVelocity(vx, vy);\n            bullet.setActive(true).setVisible(true);\n            bullet.body.enable = true;\n        }\n    }\n    registerEvents() {\n        // 触控移动\n        this.input.on('pointermove', (pointer)=>{\n            this.player.x = Phaser.Math.Clamp(pointer.x, 0, this.scale.width);\n            this.player.y = Phaser.Math.Clamp(pointer.y, 0, this.scale.height);\n        });\n        // 自动射击\n        this.shootEvent = this.time.addEvent({\n            delay: $f54ab983046695b8$var$BULLET_SPAWN_DELAY,\n            loop: true,\n            callback: ()=>{\n                const bullet = this.pool.spawn(this.player.x, this.player.y - 40);\n                if (bullet) bullet.setVelocityY($f54ab983046695b8$var$BULLET_SPEED);\n            }\n        });\n        // 键盘输入\n        this.cursors = this.input.keyboard.createCursorKeys();\n        // 碰撞检测\n        this.physics.add.overlap(this.pool.group, this.enemies, this.hitEnemy, null, this);\n        this.physics.add.overlap(this.player, this.enemies, this.playerHit, null, this);\n    }\n    hitEnemy(bullet, enemy) {\n        bullet.setActive(false).setVisible(false);\n        if (typeof enemy.hp === 'undefined') enemy.hp = 1;\n        if (enemy.isDying) return;\n        enemy.hp--;\n        if (enemy.hp <= 0) {\n            enemy.isDying = true;\n            let cfg = (0, $f504a794c1ed85ad$export$2e2bcd8739ae039)[enemy.type] || (0, $f504a794c1ed85ad$export$2e2bcd8739ae039).normal;\n            enemy.play(cfg.destroyAnim);\n            enemy.once('animationcomplete', ()=>{\n                enemy.destroy();\n            });\n            if (!this.isGameOver) {\n                this.score += cfg.score;\n                this.scoreText.setText(\"\\u5206\\u6570: \" + this.score);\n            }\n        }\n    }\n    playerHit(player, enemy) {\n        enemy.destroy();\n        if (this.isInvincible || this.isGameOver) return;\n        this.cameras.main.shake(200, 0.01);\n        this.lives--;\n        // 更新命数图标\n        if (this.livesIcons[this.lives]) this.livesIcons[this.lives].setVisible(false);\n        // 播放我方飞机摧毁动画\n        this.player.play('player_destroy');\n        this.player.once('animationcomplete', ()=>{\n            if (this.lives <= 0) {\n                this.gameOver();\n                return;\n            }\n            // 飞机复活：从下方飞入\n            this.player.setY(this.scale.height + 60);\n            this.player.setX(this.scale.width / 2);\n            this.player.setActive(true).setVisible(true);\n            this.player.play('player_fly');\n            this.tweens.add({\n                targets: this.player,\n                y: this.scale.height - 120,\n                duration: 600,\n                ease: 'Power2',\n                onComplete: ()=>{\n                    // 进入无敌状态3秒\n                    this.isInvincible = true;\n                    this.player.setAlpha(0.5);\n                    if (this.invincibleTimer) this.invincibleTimer.remove(false);\n                    this.invincibleTimer = this.time.addEvent({\n                        delay: 3000,\n                        callback: ()=>{\n                            this.isInvincible = false;\n                            this.player.setAlpha(1);\n                        }\n                    });\n                }\n            });\n        });\n    }\n    gameOver() {\n        this.isGameOver = true;\n        this.player.setActive(false).setVisible(false);\n        this.shootEvent.remove(false);\n        this.enemyEvent.remove(false);\n        this.physics.pause();\n        // 通知主页面显示遮罩层和分数\n        if (window && window.parent) {\n            const event = new CustomEvent('gameover', {\n                detail: {\n                    score: this.score\n                }\n            });\n            window.dispatchEvent(event);\n        }\n    }\n    updateDifficulty() {\n        // 难度递增：分数越高，敌机速度和数量越大\n        const newLevel = Math.floor(this.score / 200) + 1;\n        if (newLevel !== this.difficultyLevel) {\n            this.difficultyLevel = newLevel;\n            // 敌机生成频率提升\n            if (this.enemyEvent) this.enemyEvent.remove(false);\n            const newDelay = Math.max($f54ab983046695b8$var$ENEMY_SPAWN_DELAY - (this.difficultyLevel - 1) * 100, 300);\n            this.enemyEvent = this.time.addEvent({\n                delay: newDelay,\n                loop: true,\n                callback: ()=>{\n                    const x = Phaser.Math.Between(40, this.scale.width - 40);\n                    const enemy = this.enemies.create(x, -40, 'enemy');\n                    // 敌机速度提升\n                    enemy.setVelocityY(Phaser.Math.Between(120, 200) + (this.difficultyLevel - 1) * 30);\n                    enemy.hp = $f54ab983046695b8$var$ENEMY_HP;\n                    enemy.type = 'normal';\n                }\n            });\n        }\n    }\n    update() {\n        // 键盘左右移动\n        if (this.player && this.player.active && this.cursors) {\n            const speed = 300;\n            if (this.cursors.left.isDown) this.player.setVelocityX(-speed);\n            else if (this.cursors.right.isDown) this.player.setVelocityX(speed);\n            else this.player.setVelocityX(0);\n        }\n        // 无敌状态闪烁效果\n        if (this.isInvincible && this.player && this.player.active) this.player.setAlpha(Math.sin(this.time.now / 100) > 0 ? 0.5 : 1);\n        // 敌机轨迹控制（包括小boss）\n        this.enemies.children.iterate((enemy)=>{\n            if (!enemy || !enemy.active) return;\n            // 轨迹2：左右摆动\n            if (enemy.pathType === 2) enemy.x = enemy.baseX + Math.sin((this.time.now - enemy.spawnTime) / 400) * 60;\n            // 超出屏幕销毁\n            if (enemy.y > this.scale.height + 40) enemy.destroy();\n        });\n        // 子弹超出屏幕回收\n        this.pool.group.children.iterate((bullet)=>{\n            if (bullet && bullet.active && bullet.y < -40) {\n                bullet.setActive(false).setVisible(false);\n                bullet.body.enable = false;\n            }\n        });\n        // 敌方子弹超出屏幕回收\n        this.enemyBullets.children.iterate((bullet)=>{\n            if (bullet && bullet.active && bullet.y > this.scale.height + 40) {\n                bullet.setActive(false).setVisible(false);\n                bullet.body.enable = false;\n                bullet.destroy();\n            }\n        });\n        this.updateDifficulty();\n    }\n}\nvar $f54ab983046695b8$export$2e2bcd8739ae039 = $f54ab983046695b8$var$GameScene;\n\n\nwindow.onload = function() {\n    // 处理开始游戏按钮点击，点击后初始化游戏并隐藏遮罩层\n    const startBtn = document.getElementById('startBtn');\n    const startScreen = document.getElementById('startScreen');\n    const gameOverScreen = document.getElementById('gameOverScreen');\n    const finalScore = document.getElementById('finalScore');\n    const restartBtn = document.getElementById('restartBtn');\n    const playerNameInput = document.getElementById('playerName');\n    const playerNameEndInput = document.getElementById('playerNameEnd');\n    const confirmNameBtn = document.getElementById('confirmNameBtn');\n    const congratsModal = document.getElementById('congratsModal');\n    const rankListStartItems = document.getElementById('rankListStartItems');\n    const rankListEndItems = document.getElementById('rankListEndItems');\n    const rankListEnd = document.getElementById('rankListEnd');\n    let gameInstance = null;\n    let currentPlayerName = '';\n    let lastScore = 0;\n    let lastHighlightName = '';\n    function getRankList() {\n        // 从本地存储获取排行榜\n        const list = localStorage.getItem('feiji_rank_list');\n        if (list) try {\n            return JSON.parse(list);\n        } catch  {\n            return [];\n        }\n        return [];\n    }\n    function saveRankList(rankList) {\n        localStorage.setItem('feiji_rank_list', JSON.stringify(rankList));\n    }\n    function renderRankList(list, container, highlightName) {\n        if (!container) return;\n        container.innerHTML = '';\n        list.forEach((item)=>{\n            const li = document.createElement('li');\n            li.textContent = `${item.player_name} - ${item.score}`;\n            if (highlightName && item.player_name === highlightName) {\n                li.style.color = '#ffd700';\n                li.style.fontWeight = 'bold';\n            }\n            container.appendChild(li);\n        });\n    }\n    function startGame() {\n        // 销毁旧实例\n        if (gameInstance) {\n            gameInstance.destroy(true);\n            gameInstance = null;\n            // 清空容器内容\n            const container = document.getElementById('game-container');\n            if (container) container.innerHTML = '';\n        }\n        const config = {\n            type: Phaser.AUTO,\n            width: window.innerWidth,\n            height: window.innerHeight,\n            parent: 'game-container',\n            physics: {\n                default: 'arcade',\n                arcade: {\n                    debug: false\n                }\n            },\n            scene: [\n                (0, $f54ab983046695b8$export$2e2bcd8739ae039)\n            ]\n        };\n        gameInstance = new Phaser.Game(config);\n    }\n    async function fetchRankListFromAPI() {\n        try {\n            const res = await fetch('http://localhost:5050/rankings');\n            if (res.ok) {\n                const data = await res.json();\n                return data;\n            }\n        } catch  {}\n        return [];\n    }\n    async function recordGameStart() {\n        try {\n            // 获取浏览器信息\n            const browser = navigator.userAgent;\n            // 获取IP（需后端支持或通过第三方服务，前端无法直接获取真实IP，这里留空或由后端补全）\n            const ip = '';\n            // 获取玩家姓名（优先输入框，其次当前变量）\n            let player_name = '';\n            if (playerNameInput && playerNameInput.value.trim()) player_name = playerNameInput.value.trim();\n            else if (currentPlayerName) player_name = currentPlayerName;\n            await fetch('http://localhost:5050/game_start_logs', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    player_name: player_name,\n                    ip: ip,\n                    browser: browser\n                })\n            });\n        } catch  {}\n    }\n    async function recordRanking(player_name, score) {\n        try {\n            await fetch('http://localhost:5050/rankings', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    player_name: player_name,\n                    score: score\n                })\n            });\n        } catch  {}\n    }\n    async function updateRankListUI(container, highlightName) {\n        const list = await fetchRankListFromAPI();\n        renderRankList(list, container, highlightName);\n    }\n    // 初始化排行榜显示（API）\n    updateRankListUI(rankListStartItems);\n    if (startBtn && startScreen) startBtn.addEventListener('click', async function() {\n        currentPlayerName = '';\n        startScreen.style.display = 'none';\n        await recordGameStart(); // 记录访问\n        await updateRankListUI(rankListStartItems); // 查询最新榜单\n        startGame();\n    });\n    // 监听游戏结束事件，显示遮罩层和分数\n    window.addEventListener('gameover', async function(e) {\n        if (gameOverScreen && finalScore) {\n            const score = e.detail.score || 0;\n            lastScore = score;\n            finalScore.textContent = \"\\u6700\\u7EC8\\u5F97\\u5206\\uFF1A\" + score;\n            let rankList = await fetchRankListFromAPI();\n            // 判断是否进入前十\n            let tenthScore = rankList.length < 10 ? 0 : rankList[9].score;\n            if (score > tenthScore || rankList.length < 10) // 弹窗输入姓名\n            {\n                if (congratsModal && playerNameEndInput && confirmNameBtn) {\n                    congratsModal.style.display = 'flex';\n                    rankListEnd.style.display = 'none';\n                    playerNameEndInput.value = '';\n                    playerNameEndInput.focus();\n                    lastHighlightName = '';\n                }\n            } else {\n                // 直接显示榜单\n                congratsModal.style.display = 'none';\n                rankListEnd.style.display = 'flex';\n                lastHighlightName = '';\n                await updateRankListUI(rankListEndItems, lastHighlightName);\n            }\n            gameOverScreen.style.display = 'flex';\n        }\n    });\n    // 重新开始按钮逻辑\n    if (confirmNameBtn) confirmNameBtn.addEventListener('click', async function() {\n        let name = playerNameEndInput.value.trim();\n        if (!name) {\n            playerNameEndInput.focus();\n            return;\n        }\n        await recordRanking(name, lastScore); // 记录排名\n        lastHighlightName = name;\n        await updateRankListUI(rankListEndItems, lastHighlightName);\n        congratsModal.style.display = 'none';\n        rankListEnd.style.display = 'flex';\n    });\n    if (restartBtn) restartBtn.addEventListener('click', async function() {\n        // 重新开始游戏\n        if (gameOverScreen) gameOverScreen.style.display = 'none';\n        if (congratsModal) gameOverScreen.style.display = 'none';\n        if (rankListEnd) rankListEnd.style.display = 'none';\n        await recordGameStart(); // 记录访问\n        await updateRankListUI(rankListStartItems); // 查询最新榜单\n        startGame();\n    });\n};\n\n\n//# sourceMappingURL=feijidazhan.ac906d9a.js.map\n","import GameScene from './scenes/GameScene.js';\r\n\r\nwindow.onload = function() {\r\n  // 处理开始游戏按钮点击，点击后初始化游戏并隐藏遮罩层\r\n  const startBtn = document.getElementById('startBtn');\r\n  const startScreen = document.getElementById('startScreen');\r\n  const gameOverScreen = document.getElementById('gameOverScreen');\r\n  const finalScore = document.getElementById('finalScore');\r\n  const restartBtn = document.getElementById('restartBtn');\r\n  const playerNameInput = document.getElementById('playerName');\r\n  const playerNameEndInput = document.getElementById('playerNameEnd');\r\n  const confirmNameBtn = document.getElementById('confirmNameBtn');\r\n  const congratsModal = document.getElementById('congratsModal');\r\n  const rankListStartItems = document.getElementById('rankListStartItems');\r\n  const rankListEndItems = document.getElementById('rankListEndItems');\r\n  const rankListEnd = document.getElementById('rankListEnd');\r\n  let gameInstance = null;\r\n  let currentPlayerName = '';\r\n  let lastScore = 0;\r\n  let lastHighlightName = '';\r\n\r\n  function getRankList() {\r\n    // 从本地存储获取排行榜\r\n    const list = localStorage.getItem('feiji_rank_list');\r\n    if (list) {\r\n      try {\r\n        return JSON.parse(list);\r\n      } catch {\r\n        return [];\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  function saveRankList(rankList) {\r\n    localStorage.setItem('feiji_rank_list', JSON.stringify(rankList));\r\n  }\r\n\r\n  function renderRankList(list, container, highlightName) {\r\n    if (!container) return;\r\n    container.innerHTML = '';\r\n    list.forEach((item) => {\r\n      const li = document.createElement('li');\r\n      li.textContent = `${item.player_name} - ${item.score}`;\r\n      if (highlightName && item.player_name === highlightName) {\r\n        li.style.color = '#ffd700';\r\n        li.style.fontWeight = 'bold';\r\n      }\r\n      container.appendChild(li);\r\n    });\r\n  }\r\n\r\n  function startGame() {\r\n    // 销毁旧实例\r\n    if (gameInstance) {\r\n      gameInstance.destroy(true);\r\n      gameInstance = null;\r\n      // 清空容器内容\r\n      const container = document.getElementById('game-container');\r\n      if (container) container.innerHTML = '';\r\n    }\r\n    const config = {\r\n      type: Phaser.AUTO,\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      parent: 'game-container',\r\n      physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n          debug: false\r\n        }\r\n      },\r\n      scene: [GameScene]\r\n    };\r\n    gameInstance = new Phaser.Game(config);\r\n  }\r\n\r\n  async function fetchRankListFromAPI() {\r\n    try {\r\n  const res = await fetch('http://localhost:5050/rankings');\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        return data;\r\n      }\r\n    } catch {}\r\n    return [];\r\n  }\r\n\r\n  async function recordGameStart() {\r\n    try {\r\n      // 获取浏览器信息\r\n      const browser = navigator.userAgent;\r\n      // 获取IP（需后端支持或通过第三方服务，前端无法直接获取真实IP，这里留空或由后端补全）\r\n      const ip = '';\r\n      // 获取玩家姓名（优先输入框，其次当前变量）\r\n      let player_name = '';\r\n      if (playerNameInput && playerNameInput.value.trim()) {\r\n        player_name = playerNameInput.value.trim();\r\n      } else if (currentPlayerName) {\r\n        player_name = currentPlayerName;\r\n      }\r\n      await fetch('http://localhost:5050/game_start_logs', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ player_name, ip, browser })\r\n      });\r\n    } catch {}\r\n  }\r\n\r\n  async function recordRanking(player_name, score) {\r\n    try {\r\n  await fetch('http://localhost:5050/rankings', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ player_name, score }) });\r\n    } catch {}\r\n  }\r\n\r\n  async function updateRankListUI(container, highlightName) {\r\n    const list = await fetchRankListFromAPI();\r\n    renderRankList(list, container, highlightName);\r\n  }\r\n\r\n  // 初始化排行榜显示（API）\r\n  updateRankListUI(rankListStartItems);\r\n\r\n  if (startBtn && startScreen) {\r\n    startBtn.addEventListener('click', async function() {\r\n      currentPlayerName = '';\r\n      startScreen.style.display = 'none';\r\n      await recordGameStart(); // 记录访问\r\n      await updateRankListUI(rankListStartItems); // 查询最新榜单\r\n      startGame();\r\n    });\r\n  }\r\n\r\n  // 监听游戏结束事件，显示遮罩层和分数\r\n  window.addEventListener('gameover', async function(e) {\r\n    if (gameOverScreen && finalScore) {\r\n      const score = e.detail.score || 0;\r\n      lastScore = score;\r\n      finalScore.textContent = '最终得分：' + score;\r\n      let rankList = await fetchRankListFromAPI();\r\n      // 判断是否进入前十\r\n      let tenthScore = rankList.length < 10 ? 0 : rankList[9].score;\r\n      if (score > tenthScore || rankList.length < 10) {\r\n        // 弹窗输入姓名\r\n        if (congratsModal && playerNameEndInput && confirmNameBtn) {\r\n          congratsModal.style.display = 'flex';\r\n          rankListEnd.style.display = 'none';\r\n          playerNameEndInput.value = '';\r\n          playerNameEndInput.focus();\r\n          lastHighlightName = '';\r\n        }\r\n      } else {\r\n        // 直接显示榜单\r\n        congratsModal.style.display = 'none';\r\n        rankListEnd.style.display = 'flex';\r\n        lastHighlightName = '';\r\n        await updateRankListUI(rankListEndItems, lastHighlightName);\r\n      }\r\n      gameOverScreen.style.display = 'flex';\r\n    }\r\n  });\r\n\r\n  // 重新开始按钮逻辑\r\n  if (confirmNameBtn) {\r\n    confirmNameBtn.addEventListener('click', async function() {\r\n      let name = playerNameEndInput.value.trim();\r\n      if (!name) {\r\n        playerNameEndInput.focus();\r\n        return;\r\n      }\r\n      await recordRanking(name, lastScore); // 记录排名\r\n      lastHighlightName = name;\r\n      await updateRankListUI(rankListEndItems, lastHighlightName);\r\n      congratsModal.style.display = 'none';\r\n      rankListEnd.style.display = 'flex';\r\n    });\r\n  }\r\n\r\n  if (restartBtn) {\r\n    restartBtn.addEventListener('click', async function() {\r\n      // 重新开始游戏\r\n      if (gameOverScreen) gameOverScreen.style.display = 'none';\r\n      if (congratsModal) gameOverScreen.style.display = 'none';\r\n      if (rankListEnd) rankListEnd.style.display = 'none';\r\n      await recordGameStart(); // 记录访问\r\n      await updateRankListUI(rankListStartItems); // 查询最新榜单\r\n      startGame();\r\n    });\r\n  }\r\n}\r\n","import ObjectPool from '../utils/ObjectPool.js';\r\nimport enemyConfig from '../config/enemyConfig.js';\r\n// 常量统一管理\r\nconst PLAYER_SPEED = 300;\r\nconst PLAYER_REVIVE_Y = 120;\r\nconst PLAYER_INVINCIBLE_TIME = 3000;\r\nconst ENEMY_HP = 1;\r\nconst BULLET_SPEED = -600;\r\nconst ENEMY_SPAWN_DELAY = 800;\r\nconst BULLET_SPAWN_DELAY = 200;\r\nconst LIVES_ICON_GAP = 40;\r\nconst LIVES_ICON_Y = 80;\r\nconst SCORE_TEXT_X = 16;\r\nconst SCORE_TEXT_Y = 16;\r\n\r\nclass GameScene extends Phaser.Scene {\r\n  constructor() {\r\n    super({ key: 'GameScene' });\r\n    this.player = null;\r\n    this.bullets = null;\r\n    this.enemies = null;\r\n    this.lastEnemyTime = 0;\r\n    this.pool = null;\r\n    this.score = 0;\r\n    this.scoreText = null;\r\n    this.isGameOver = false;\r\n    this.lives = 3;\r\n    this.livesIcons = [];\r\n    this.isInvincible = false;\r\n    this.invincibleTimer = null;\r\n  }\r\n\r\n  preload() {\r\n    // 批量加载资源\r\n    const images = [\r\n      ['player', 'me1.png'], ['bullet', 'bullet1.png'], ['enemy', 'enemy1.png'], ['bg', 'background.png'], ['life', 'life.png'],\r\n      ['me_destroy_1', 'me_destroy_1.png'], ['me_destroy_2', 'me_destroy_2.png'], ['me_destroy_3', 'me_destroy_3.png'], ['me_destroy_4', 'me_destroy_4.png'],\r\n      ['me1', 'me1.png'], ['me2', 'me2.png'],\r\n      ['enemy1_down1', 'enemy1_down1.png'], ['enemy1_down2', 'enemy1_down2.png'], ['enemy1_down3', 'enemy1_down3.png'], ['enemy1_down4', 'enemy1_down4.png'],\r\n      ['enemy2', 'enemy2.png'],\r\n      ['enemy2_down1', 'enemy2_down1.png'], ['enemy2_down2', 'enemy2_down2.png'], ['enemy2_down3', 'enemy2_down3.png'], ['enemy2_down4', 'enemy2_down4.png'],\r\n      ['enemy3', 'enemy3_n1.png'],\r\n      ['enemy3_down1', 'enemy3_down1.png'], ['enemy3_down2', 'enemy3_down2.png'], ['enemy3_down3', 'enemy3_down3.png'], ['enemy3_down4', 'enemy3_down4.png'],['enemy3_down5', 'enemy3_down5.png'],['enemy3_down6', 'enemy3_down6.png']\r\n    ];\r\n    images.forEach(([key, file]) => {\r\n      this.load.image(key, `./assets/images/${file}`);\r\n    });\r\n  }\r\n\r\n  create() {\r\n    this.add.tileSprite(0, 0, this.scale.width, this.scale.height, 'bg').setOrigin(0);\r\n    this.createAnimations();\r\n    this.createPlayer();\r\n    this.createUI();\r\n    this.createPools();\r\n    this.createEnemies();\r\n    this.registerEvents();\r\n    this.isGameOver = false;\r\n    this.difficultyLevel = 1;\r\n    // 炫酷横条预警提示\r\n    this.bossWarningBar = this.add.rectangle(this.scale.width/2, 60, this.scale.width * 0.8, 48, 0xff0000, 0.7).setOrigin(0.5).setDepth(10).setVisible(false);\r\n    this.bossWarningBar.setStrokeStyle(4, 0xffff00, 1);\r\n    this.bossWarningBar.setAlpha(0.7);\r\n    this.bossWarningText = this.add.text(this.scale.width/2, 60, '', {\r\n      fontSize: '32px',\r\n      fill: 'linear-gradient(90deg, #fff, #ff0, #f00)',\r\n      fontWeight: 'bold',\r\n      stroke: '#000',\r\n      strokeThickness: 4,\r\n      shadow: { offsetX: 2, offsetY: 2, color: '#ff0', blur: 8, fill: true }\r\n    }).setOrigin(0.5).setDepth(11).setVisible(false);\r\n  }\r\n\r\n  createAnimations() {\r\n    this.anims.create({\r\n      key: 'player_fly',\r\n      frames: [{ key: 'me1' }, { key: 'me2' }],\r\n      frameRate: 8,\r\n      repeat: -1\r\n    });\r\n    this.anims.create({\r\n      key: 'player_destroy',\r\n      frames: [\r\n        { key: 'me_destroy_1' },\r\n        { key: 'me_destroy_2' },\r\n        { key: 'me_destroy_3' },\r\n        { key: 'me_destroy_4' }\r\n      ],\r\n      frameRate: 10,\r\n      repeat: 0\r\n    });\r\n    this.anims.create({\r\n      key: 'enemy_destroy',\r\n      frames: [\r\n        { key: 'enemy1_down1' },\r\n        { key: 'enemy1_down2' },\r\n        { key: 'enemy1_down3' },\r\n        { key: 'enemy1_down4' }\r\n      ],\r\n      frameRate: 10,\r\n      repeat: 0\r\n    });\r\n    this.anims.create({\r\n      key: 'boss1_destroy',\r\n      frames: [\r\n        { key: 'enemy2_down1' },\r\n        { key: 'enemy2_down2' },\r\n        { key: 'enemy2_down3' },\r\n        { key: 'enemy2_down4' }\r\n      ],\r\n      frameRate: 10,\r\n      repeat: 0\r\n    });\r\n    this.anims.create({\r\n      key: 'boss2_destroy',\r\n      frames: [\r\n        { key: 'enemy3_down1' },\r\n        { key: 'enemy3_down2' },\r\n        { key: 'enemy3_down3' },\r\n        { key: 'enemy3_down4' },\r\n        { key: 'enemy3_down5' },\r\n        { key: 'enemy3_down6' },\r\n      ],\r\n      frameRate: 10,\r\n      repeat: 0\r\n    });\r\n  }\r\n\r\n  createPlayer() {\r\n    this.player = this.physics.add.sprite(this.scale.width/2, this.scale.height-PLAYER_REVIVE_Y, 'me1').setDepth(1);\r\n    this.player.setCollideWorldBounds(true);\r\n    this.player.setScale(0.5);\r\n    this.player.play('player_fly');\r\n  }\r\n\r\n  createUI() {\r\n    this.score = 0;\r\n    this.scoreText = this.add.text(SCORE_TEXT_X, SCORE_TEXT_Y, '分数: 0', { fontSize: '24px', fill: '#fff' }).setDepth(2);\r\n    this.lives = 3;\r\n    this.livesIcons = [];\r\n    for (let i = 0; i < this.lives; i++) {\r\n      const icon = this.add.image(24 + i * LIVES_ICON_GAP, LIVES_ICON_Y, 'life').setScale(0.5).setDepth(2);\r\n      this.livesIcons.push(icon);\r\n    }\r\n  }\r\n\r\n  createPools() {\r\n    this.pool = new ObjectPool(this, 'bullet', 50);\r\n    // 敌方子弹池\r\n    this.enemyBullets = this.physics.add.group();\r\n  }\r\n\r\n  createEnemies() {\r\n    this.enemies = this.physics.add.group();\r\n    this.enemyEvent = this.time.addEvent({\r\n      delay: ENEMY_SPAWN_DELAY,\r\n      loop: true,\r\n      callback: () => {\r\n        const x = Phaser.Math.Between(40, this.scale.width-40);\r\n        const enemy = this.enemies.create(x, -40, 'enemy');\r\n        enemy.hp = ENEMY_HP;\r\n        enemy.type = 'normal';\r\n        // 随机选择轨迹类型\r\n        const pathType = Phaser.Math.Between(1, 3);\r\n        enemy.pathType = pathType;\r\n        enemy.baseX = x;\r\n        enemy.spawnTime = this.time.now;\r\n        // 轨迹1：直线\r\n        if (pathType === 1) {\r\n          enemy.setVelocityY(Phaser.Math.Between(120, 200));\r\n        }\r\n        // 轨迹2：左右摆动\r\n        else if (pathType === 2) {\r\n          enemy.setVelocityY(150);\r\n        }\r\n        // 轨迹3：斜线\r\n        else if (pathType === 3) {\r\n          enemy.setVelocityY(160);\r\n          enemy.setVelocityX(Phaser.Math.Between(-80, 80));\r\n        }\r\n      }\r\n    });\r\n    // 定时出现小boss\r\n    this.scheduleBoss1();\r\n    // 定时出现大boss\r\n    this.scheduleBoss2();\r\n  }\r\n\r\n  scheduleBoss1() {\r\n    const base = 8000; // 小boss基础间隔8秒\r\n    const rand = Phaser.Math.Between(0, 4000); // 随机0~4秒\r\n    this.time.addEvent({\r\n      delay: base + rand,\r\n      callback: () => {\r\n        this.spawnBoss1();\r\n        this.scheduleBoss1(); // 递归定时\r\n      }\r\n    });\r\n  }\r\n\r\n  scheduleBoss2() {\r\n    const base = 20000; // 大boss基础间隔20秒\r\n    const rand = Phaser.Math.Between(0, 8000); // 随机0~8秒\r\n    this.time.addEvent({\r\n      delay: base + rand,\r\n      callback: () => {\r\n        this.spawnBoss2();\r\n        this.scheduleBoss2(); // 递归定时\r\n      }\r\n    });\r\n  }\r\n\r\n  showBossWarning(type) {\r\n    this.bossWarningBar.setVisible(true);\r\n    this.bossWarningText.setText(type === 'boss2' ? '⚡⚡⚡ 大Boss来袭！ ⚡⚡⚡' : '小Boss来袭！');\r\n    this.bossWarningText.setVisible(true);\r\n    // 闪烁动画\r\n    this.tweens.add({\r\n      targets: [this.bossWarningBar, this.bossWarningText],\r\n      alpha: { from: 0.7, to: 1 },\r\n      duration: 300,\r\n      yoyo: true,\r\n      repeat: 8\r\n    });\r\n    this.time.delayedCall(3000, () => {\r\n      this.bossWarningBar.setVisible(false);\r\n      this.bossWarningText.setVisible(false);\r\n    });\r\n  }\r\n\r\n  spawnBoss1() {\r\n    const x = Phaser.Math.Between(60, this.scale.width-60);\r\n    const boss = this.enemies.create(x, -60, 'enemy2');\r\n    boss.setVelocityY(100);\r\n    boss.hp = 20;\r\n    boss.type = 'boss1';\r\n    const pathType = Phaser.Math.Between(1, 3);\r\n    boss.pathType = pathType;\r\n    boss.baseX = x;\r\n    boss.spawnTime = this.time.now;\r\n    if (pathType === 3) {\r\n      boss.setVelocityX(Phaser.Math.Between(-80, 80));\r\n    }\r\n    // 定时发射子弹\r\n    boss.shootTimer = this.time.addEvent({\r\n      delay: 1200,\r\n      loop: true,\r\n      callback: () => {\r\n        if (!boss.active) return;\r\n        this.shootEnemyBullets(boss, 3);\r\n      }\r\n    });\r\n  }\r\n\r\n  spawnBoss2() {\r\n    this.showBossWarning('boss2');\r\n    const x = Phaser.Math.Between(80, this.scale.width-80);\r\n    const boss = this.enemies.create(x, -80, 'enemy3');\r\n    boss.setVelocityY(80);\r\n    boss.hp = 50;\r\n    boss.type = 'boss2';\r\n    // 定时发射子弹\r\n    boss.shootTimer = this.time.addEvent({\r\n      delay: 900,\r\n      loop: true,\r\n      callback: () => {\r\n        if (!boss.active) return;\r\n        this.shootEnemyBullets(boss, 7);\r\n      }\r\n    });\r\n  }\r\n\r\n  shootEnemyBullets(boss, count) {\r\n    const spreadAngle = 60; // 总散射角度\r\n    const startAngle = -spreadAngle/2;\r\n    for (let i = 0; i < count; i++) {\r\n      const angle = startAngle + (spreadAngle/(count-1))*i;\r\n      const rad = Phaser.Math.DegToRad(angle);\r\n      const speed = 300;\r\n      const vx = Math.sin(rad) * speed;\r\n      const vy = Math.cos(rad) * speed;\r\n      const bullet = this.enemyBullets.create(boss.x, boss.y+40, 'bullet');\r\n      bullet.setVelocity(vx, vy);\r\n      bullet.setActive(true).setVisible(true);\r\n      bullet.body.enable = true;\r\n    }\r\n  }\r\n\r\n  registerEvents() {\r\n    // 触控移动\r\n    this.input.on('pointermove', pointer => {\r\n      this.player.x = Phaser.Math.Clamp(pointer.x, 0, this.scale.width);\r\n      this.player.y = Phaser.Math.Clamp(pointer.y, 0, this.scale.height);\r\n    });\r\n    // 自动射击\r\n    this.shootEvent = this.time.addEvent({\r\n      delay: BULLET_SPAWN_DELAY,\r\n      loop: true,\r\n      callback: () => {\r\n        const bullet = this.pool.spawn(this.player.x, this.player.y-40);\r\n        if (bullet) bullet.setVelocityY(BULLET_SPEED);\r\n      }\r\n    });\r\n    // 键盘输入\r\n    this.cursors = this.input.keyboard.createCursorKeys();\r\n    // 碰撞检测\r\n    this.physics.add.overlap(this.pool.group, this.enemies, this.hitEnemy, null, this);\r\n    this.physics.add.overlap(this.player, this.enemies, this.playerHit, null, this);\r\n  }\r\n\r\n  hitEnemy(bullet, enemy) {\r\n    bullet.setActive(false).setVisible(false);\r\n    if (typeof enemy.hp === 'undefined') enemy.hp = 1;\r\n    if (enemy.isDying) return;\r\n    enemy.hp--;\r\n    if (enemy.hp <= 0) {\r\n      enemy.isDying = true;\r\n      let cfg = enemyConfig[enemy.type] || enemyConfig.normal;\r\n      enemy.play(cfg.destroyAnim);\r\n      enemy.once('animationcomplete', () => {\r\n        enemy.destroy();\r\n      });\r\n      if (!this.isGameOver) {\r\n        this.score += cfg.score;\r\n        this.scoreText.setText('分数: ' + this.score);\r\n      }\r\n    }\r\n  }\r\n\r\n  playerHit(player, enemy) {\r\n    enemy.destroy();\r\n    if (this.isInvincible || this.isGameOver) return;\r\n    this.cameras.main.shake(200, 0.01);\r\n    this.lives--;\r\n    // 更新命数图标\r\n    if (this.livesIcons[this.lives]) {\r\n      this.livesIcons[this.lives].setVisible(false);\r\n    }\r\n    // 播放我方飞机摧毁动画\r\n    this.player.play('player_destroy');\r\n    this.player.once('animationcomplete', () => {\r\n      if (this.lives <= 0) {\r\n        this.gameOver();\r\n        return;\r\n      }\r\n      // 飞机复活：从下方飞入\r\n      this.player.setY(this.scale.height + 60);\r\n      this.player.setX(this.scale.width / 2);\r\n      this.player.setActive(true).setVisible(true);\r\n      this.player.play('player_fly');\r\n      this.tweens.add({\r\n        targets: this.player,\r\n        y: this.scale.height - 120,\r\n        duration: 600,\r\n        ease: 'Power2',\r\n        onComplete: () => {\r\n          // 进入无敌状态3秒\r\n          this.isInvincible = true;\r\n          this.player.setAlpha(0.5);\r\n          if (this.invincibleTimer) this.invincibleTimer.remove(false);\r\n          this.invincibleTimer = this.time.addEvent({\r\n            delay: 3000,\r\n            callback: () => {\r\n              this.isInvincible = false;\r\n              this.player.setAlpha(1);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  gameOver() {\r\n    this.isGameOver = true;\r\n    this.player.setActive(false).setVisible(false);\r\n    this.shootEvent.remove(false);\r\n    this.enemyEvent.remove(false);\r\n    this.physics.pause();\r\n    // 通知主页面显示遮罩层和分数\r\n    if (window && window.parent) {\r\n      const event = new CustomEvent('gameover', { detail: { score: this.score } });\r\n      window.dispatchEvent(event);\r\n    }\r\n  }\r\n\r\n  updateDifficulty() {\r\n    // 难度递增：分数越高，敌机速度和数量越大\r\n    const newLevel = Math.floor(this.score / 200) + 1;\r\n    if (newLevel !== this.difficultyLevel) {\r\n      this.difficultyLevel = newLevel;\r\n      // 敌机生成频率提升\r\n      if (this.enemyEvent) {\r\n        this.enemyEvent.remove(false);\r\n      }\r\n      const newDelay = Math.max(ENEMY_SPAWN_DELAY - (this.difficultyLevel-1)*100, 300);\r\n      this.enemyEvent = this.time.addEvent({\r\n        delay: newDelay,\r\n        loop: true,\r\n        callback: () => {\r\n          const x = Phaser.Math.Between(40, this.scale.width-40);\r\n          const enemy = this.enemies.create(x, -40, 'enemy');\r\n          // 敌机速度提升\r\n          enemy.setVelocityY(Phaser.Math.Between(120, 200) + (this.difficultyLevel-1)*30);\r\n          enemy.hp = ENEMY_HP;\r\n          enemy.type = 'normal';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  update() {\r\n    // 键盘左右移动\r\n    if (this.player && this.player.active && this.cursors) {\r\n      const speed = 300;\r\n      if (this.cursors.left.isDown) {\r\n        this.player.setVelocityX(-speed);\r\n      } else if (this.cursors.right.isDown) {\r\n        this.player.setVelocityX(speed);\r\n      } else {\r\n        this.player.setVelocityX(0);\r\n      }\r\n    }\r\n    // 无敌状态闪烁效果\r\n    if (this.isInvincible && this.player && this.player.active) {\r\n      this.player.setAlpha(Math.sin(this.time.now / 100) > 0 ? 0.5 : 1);\r\n    }\r\n    // 敌机轨迹控制（包括小boss）\r\n    this.enemies.children.iterate(enemy => {\r\n      if (!enemy || !enemy.active) return;\r\n      // 轨迹2：左右摆动\r\n      if (enemy.pathType === 2) {\r\n        enemy.x = enemy.baseX + Math.sin((this.time.now-enemy.spawnTime)/400)*60;\r\n      }\r\n      // 超出屏幕销毁\r\n      if (enemy.y > this.scale.height+40) enemy.destroy();\r\n    });\r\n    // 子弹超出屏幕回收\r\n    this.pool.group.children.iterate(bullet => {\r\n      if (bullet && bullet.active && bullet.y < -40) {\r\n        bullet.setActive(false).setVisible(false);\r\n        bullet.body.enable = false;\r\n      }\r\n    });\r\n    // 敌方子弹超出屏幕回收\r\n    this.enemyBullets.children.iterate(bullet => {\r\n      if (bullet && bullet.active && bullet.y > this.scale.height+40) {\r\n        bullet.setActive(false).setVisible(false);\r\n        bullet.body.enable = false;\r\n        bullet.destroy();\r\n      }\r\n    });\r\n    this.updateDifficulty();\r\n  }\r\n}\r\n\r\nexport default GameScene;\r\n","class ObjectPool {\r\n  constructor(scene, key, maxSize = 30) {\r\n    this.scene = scene;\r\n    this.key = key;\r\n    this.maxSize = maxSize;\r\n    this.group = scene.physics.add.group({\r\n      defaultKey: key,\r\n      maxSize: maxSize\r\n    });\r\n  }\r\n\r\n  spawn(x, y) {\r\n    let obj = this.group.get(x, y);\r\n    if (obj) {\r\n      obj.setActive(true).setVisible(true);\r\n      obj.body.enable = true;\r\n      obj.x = x;\r\n      obj.y = y;\r\n      return obj;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default ObjectPool;\r\n","// 敌机类型配置\r\nexport default {\r\n  normal: {\r\n    key: 'enemy',\r\n    hp: 1,\r\n    score: 10,\r\n    speed: () => Phaser.Math.Between(120, 200),\r\n    destroyAnim: 'enemy_destroy',\r\n    spawnY: -40,\r\n    spawnX: () => Phaser.Math.Between(40, 400)\r\n  },\r\n  boss1: {\r\n    key: 'enemy2',\r\n    hp: 100,\r\n    score: 100,\r\n    speed: () => 100,\r\n    destroyAnim: 'boss1_destroy',\r\n    spawnY: -60,\r\n    spawnX: () => Phaser.Math.Between(60, 400)\r\n  },\r\n  boss2: {\r\n    key: 'enemy3',\r\n    hp: 200,\r\n    score: 500,\r\n    speed: () => 80,\r\n    destroyAnim: 'boss2_destroy',\r\n    spawnY: -80,\r\n    spawnX: () => Phaser.Math.Between(80, 400)\r\n  }\r\n};\r\n"],"names":["$1a431237764dd29c$export$2e2bcd8739ae039","scene","key","maxSize","group","physics","add","defaultKey","spawn","x","y","obj","get","setActive","setVisible","body","enable","$f504a794c1ed85ad$export$2e2bcd8739ae039","normal","hp","score","speed","Phaser","Math","Between","destroyAnim","spawnY","spawnX","boss1","boss2","$f54ab983046695b8$var$GameScene","Scene","player","bullets","enemies","lastEnemyTime","pool","scoreText","isGameOver","lives","livesIcons","isInvincible","invincibleTimer","preload","images","forEach","file","load","image","create","tileSprite","scale","width","height","setOrigin","createAnimations","createPlayer","createUI","createPools","createEnemies","registerEvents","difficultyLevel","bossWarningBar","rectangle","setDepth","setStrokeStyle","setAlpha","bossWarningText","text","fontSize","fill","fontWeight","stroke","strokeThickness","shadow","offsetX","offsetY","color","blur","anims","frames","frameRate","repeat","sprite","setCollideWorldBounds","setScale","play","i","icon","push","enemyBullets","enemyEvent","time","addEvent","delay","loop","callback","enemy","type","pathType","baseX","spawnTime","now","setVelocityY","setVelocityX","scheduleBoss1","scheduleBoss2","rand","base","spawnBoss1","spawnBoss2","showBossWarning","setText","tweens","targets","alpha","from","to","duration","yoyo","delayedCall","boss","shootTimer","active","shootEnemyBullets","count","angle","startAngle","spreadAngle","rad","DegToRad","vx","sin","vy","cos","bullet","setVelocity","input","on","pointer","Clamp","shootEvent","cursors","keyboard","createCursorKeys","overlap","hitEnemy","playerHit","isDying","cfg","once","destroy","cameras","main","shake","gameOver","setY","setX","ease","onComplete","remove","pause","window","parent","event","CustomEvent","detail","dispatchEvent","updateDifficulty","newLevel","floor","newDelay","max","$f54ab983046695b8$var$ENEMY_SPAWN_DELAY","update","left","isDown","right","children","iterate","onload","startBtn","document","getElementById","startScreen","gameOverScreen","finalScore","restartBtn","playerNameInput","playerNameEndInput","confirmNameBtn","congratsModal","rankListStartItems","rankListEndItems","rankListEnd","gameInstance","currentPlayerName","lastScore","lastHighlightName","startGame","container","innerHTML","config","AUTO","innerWidth","innerHeight","default","arcade","debug","Game","fetchRankListFromAPI","res","fetch","ok","json","recordGameStart","browser","navigator","userAgent","player_name","value","trim","method","headers","JSON","stringify","ip","recordRanking","updateRankListUI","highlightName","list","item","li","createElement","textContent","style","appendChild","addEventListener","display","e","rankList","length","focus","name"],"version":3,"file":"feijidazhan.ac906d9a.js.map"}